syntax = "proto3";
package ethermint.intrarelayer.v1;

import "google/api/annotations.proto";
import "gogoproto/gogo.proto";
import "cosmos/base/v1beta1/coin.proto";

option go_package = "github.com/functionx/fx-core/x/intrarelayer/types";

// Msg defines the intrarelayer Msg service.
service Msg {
  // ConvertCoin mints a FIP20 representation of the SDK Coin denom that is registered on the token mapping.
  rpc ConvertCoin(MsgConvertCoin) returns (MsgConvertCoinResponse){
    option (google.api.http).get = "/ethermint/intrarelayer/v1/tx/convert_coin";
  };
  // ConvertFIP20 mints a Cosmos coin representation of the FIP20 token contract that is registered on the token mapping.
  rpc ConvertFIP20(MsgConvertFIP20) returns (MsgConvertFIP20Response){
    option (google.api.http).get = "/ethermint/intrarelayer/v1/tx/convert_fip20";
  };
}

// MsgConvertCoin defines a Msg to convert a Cosmos Coin to a FIP20 token
message MsgConvertCoin {
  // Cosmos coin which denomination is registered on intrarelayer bridge.
  // The coin amount defines the total FIP20 tokens to convert.
  cosmos.base.v1beta1.Coin coin = 1 [(gogoproto.nullable) = false];
  // recipient hex address to receive FIP20 token
  string receiver = 2;
  // cosmos bech32 address from the owner of the given FIP20 tokens
  string sender = 3;
}

// MsgConvertCoinResponse returns no fields
message MsgConvertCoinResponse{}


// MsgConvertFIP20 defines a Msg to convert an FIP20 token to a Cosmos SDK coin.
message MsgConvertFIP20 {
  // FIP20 token contract address registered on intrarelayer bridge
  string contract_address = 1;
  // amount of FIP20 tokens to mint
  string amount = 2 [
    (gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Int",
    (gogoproto.nullable) = false
  ];
  // bech32 address to receive SDK coins.
  string receiver = 3;
  // msg sender, must be equal to pubkey address(new or old)
  string sender = 4;
  // hex pubKey from the owner of the given FIP20 tokens and msg sender
  string pubKey = 5;
}

// MsgConvertFIP20Response returns no fields
message MsgConvertFIP20Response{}
